name: CI Pipeline
on:
  push:
    branches:
      - main
    tags: ['*.*.*']
permissions:
  contents: write
env:
  RUNNER_VERSION: 2.323.0
jobs:
  build-and-push:
    if: github.ref_type == 'tag'
    runs-on: self-hosted
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      TAG_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract OS and ARCH
        run: |
          echo "TARGETOS=$(echo '${{ matrix.platform }}' | cut -d/ -f1)" >> $GITHUB_ENV
          echo "TARGETARCH=$(echo '${{ matrix.platform }}' | cut -d/ -f2)" >> $GITHUB_ENV
      - name: Set IMAGE name
        run: |
          echo "IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${TARGETOS}-${TARGETARCH}" >> $GITHUB_ENV
      - name: Login to GHCR
        run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Push Docker Image
        run: |
          docker build . \
            --build-arg RUNNER_VERSION=${{ env.RUNNER_VERSION }} \
            --build-arg TARGETOS=${{ env.TARGETOS }} \
            --build-arg TARGETARCH=${{ env.TARGETARCH }} \
            -t $IMAGE
          docker push $IMAGE
      - name: Deploy Docker Stack
        if: env.TARGETOS == 'linux' && env.TARGETARCH == 'amd64'
        run: |
          sed -i "s|__IMAGE__|$IMAGE|" ./docker-compose.yml
          sed -i "s|__REG_TOKEN__|${{ secrets.REG_TOKEN }}|" ./docker-compose.yml
          mv ./docker-compose.yml /stacks/github/$PROJECT_NAME.yml
          docker stack deploy --compose-file /stacks/github/$PROJECT_NAME.yml $PROJECT_NAME >> /dev/null
  update-readme:
    if: github.ref_type == 'tag'
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Update README
        run: |
          echo "![](https://img.shields.io/badge/version-${{ github.ref_name }}-brightgreen)" >> badges.md
          echo "" >> badges.md
          sed -i '/<!-- badges -->/,/<!-- badges-end -->/{
            /<!-- badges -->/{
              p
              r badges.md
            }
            /<!-- badges-end -->/p
            d
          }' readme.md
      - name: Commit README
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git switch main  # <-- importante
          git pull origin main
          git add readme.md
          git commit -m "docs: update README with version ${{ github.ref_name }}" || echo "no changes"
          git push