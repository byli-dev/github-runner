name: CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
env:
  RUNNER_VERSION: 2.323.0

jobs:
  build-and-push:
    runs-on: self-hosted
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64]
    env:
      RUNNER_VERSION: 2.323.0
      PROJECT_NAME: ${{ github.event.repository.name }}
      TAG_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        if: startsWith(github.ref, 'refs/heads/main')
        uses: actions/checkout@v4

      - name: Extract OS and ARCH
        run: |
          echo "TARGETOS=$(echo '${{ matrix.platform }}' | cut -d/ -f1)" >> $GITHUB_ENV
          echo "TARGETARCH=$(echo '${{ matrix.platform }}' | cut -d/ -f2)" >> $GITHUB_ENV

      - name: Set IMAGE name
        run: |
          echo "IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${TARGETOS}-${TARGETARCH}" >> $GITHUB_ENV
        
      - name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker build . \
            --build-arg RUNNER_VERSION=${RUNNER_VERSION} \
            --build-arg TARGETOS=${TARGETOS} \
            --build-arg TARGETARCH=${TARGETARCH} \
            -t $IMAGE
          docker push $IMAGE

      - name: Deploy Docker Stack
        if: startsWith(github.ref, 'refs/tags/') && env.TARGETOS == 'linux' && env.TARGETARCH == 'amd64'
        run: |
          sed -i "s|__IMAGE__|$IMAGE|" ./docker-compose.yml
          sed -i "s|__REG_TOKEN__|${{ secrets.REG_TOKEN }}|" ./docker-compose.yml
          mv ./docker-compose.yml /stacks/github/$PROJECT_NAME.yml
          docker stack deploy --compose-file /stacks/github/$PROJECT_NAME.yml $PROJECT_NAME >> /dev/null
